<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GoCD</title>
  <subtitle>Continuous Delivery</subtitle>
  <id>https://preview.gocd.org/blog</id>
  <link href="https://preview.gocd.org/blog"/>
  <link href="https://preview.gocd.org/feed/rss.xml" rel="self"/>
  <updated>2017-07-18T00:00:00Z</updated>
  <author>
    <name>GoCD Team</name>
  </author>
  <entry>
    <title>Continuous Deployment Strategies - Part 1</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/07/18/continuous-deployment-strategies.html"/>
    <id>https://preview.gocd.org/2017/07/18/continuous-deployment-strategies.html</id>
    <published>2017-07-18T00:00:00Z</published>
    <updated>2017-07-18T00:00:00Z</updated>
    <author>
      <name>Ketan Padegaonkar</name>
    </author>
    <content type="html">Modern webapps and application servers have evolved, but many developers continue to use similar strategies to perform deployments. This post looks some of the continuous deployment strategies.</content>
  </entry>
  <entry>
    <title>An introduction to continuous delivery - CD 101</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/07/13/introduction-continuous-delivery-101.html"/>
    <id>https://preview.gocd.org/2017/07/13/introduction-continuous-delivery-101.html</id>
    <published>2017-07-13T00:00:00Z</published>
    <updated>2017-07-13T00:00:00Z</updated>
    <author>
      <name>Ken Mugrage</name>
    </author>
    <content type="html">CD 101 is a video series to help you get started on your CD journey. Part One of this series covers the history of continuous delivery, difference between continuous delivery and continuous deployment and a brief introduction of a deployment pipeline.</content>
  </entry>
  <entry>
    <title>Continuous Delivery: GoCD vs Spinnaker</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/07/10/gocd-vs-spinnaker.html"/>
    <id>https://preview.gocd.org/2017/07/10/gocd-vs-spinnaker.html</id>
    <published>2017-07-10T00:00:00Z</published>
    <updated>2017-07-10T00:00:00Z</updated>
    <author>
      <name>Sheroy Marker (Head of Technology), ThoughtWorks Products</name>
    </author>
    <content type="html">This post is an overview of GoCD and Spinnaker, why they are different from each other and which problems you should use them to solve.</content>
  </entry>
  <entry>
    <title>The Product Managersâ€™ Guide to Continuous Delivery and DevOps</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/07/05/product-manager-guide-continuous-delivery.html"/>
    <id>https://preview.gocd.org/2017/07/05/product-manager-guide-continuous-delivery.html</id>
    <published>2017-07-05T00:00:00Z</published>
    <updated>2017-07-05T00:00:00Z</updated>
    <author>
      <name>Suzie Prince (Head of Product), ThoughtWorks Products</name>
    </author>
    <content type="html">If you're in tech, a product manager or an MBA and are curious about what continuous delivery is and what a DevOps culture looks like, this beginner's guide is for you.</content>
  </entry>
  <entry>
    <title>Serverless Architectures and Continuous Delivery</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/06/26/serverless-architecture-continuous-delivery.html"/>
    <id>https://preview.gocd.org/2017/06/26/serverless-architecture-continuous-delivery.html</id>
    <published>2017-06-26T00:00:00Z</published>
    <updated>2017-06-26T00:00:00Z</updated>
    <author>
      <name>Robin Weston</name>
    </author>
    <content type="html">Serverless architectures can be great enablers of Continuous Delivery by combining a focus on value with small, quick-to-deploy, independent units of functionality. This post explains what a serverless architecture is, their benefits with a deeper look at Functions as a Service (FaaS).</content>
  </entry>
  <entry>
    <title>Infographic: 5 Key Patterns for your Deployment Pipeline</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/06/22/deployment-pipeline-patterns-infographic.html"/>
    <id>https://preview.gocd.org/2017/06/22/deployment-pipeline-patterns-infographic.html</id>
    <published>2017-06-22T00:00:00Z</published>
    <updated>2017-06-22T00:00:00Z</updated>
    <author>
      <name>Ken Mugrage</name>
    </author>
    <content type="html">This infographic walks through 5 key patterns to setting up a successful deployment pipeline, including designing parallel workflows, running tests in parallel, and more.</content>
  </entry>
  <entry>
    <title>Part 7 - Preparing for emergency deployments and rollbacks: Modeling Deployment Pipelines</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/06/20/hotfixes-rollback-rollforward.html"/>
    <id>https://preview.gocd.org/2017/06/20/hotfixes-rollback-rollforward.html</id>
    <published>2017-06-20T00:00:00Z</published>
    <updated>2017-06-20T00:00:00Z</updated>
    <author>
      <name>Aravind S.V, Product Manager at GoCD</name>
    </author>
    <content type="html">This post shows how to introduce Hotfixes and Rollbacks into your deployment pipeline. These techniques make your pipeline more flexible and can help you bypass process during emergencies.</content>
  </entry>
  <entry>
    <title>Part 6 - Under the hood of Deployment Pipelines: Modeling Deployment Pipelines</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/06/13/modeling-deployment-pipelines-agents-environments.html"/>
    <id>https://preview.gocd.org/2017/06/13/modeling-deployment-pipelines-agents-environments.html</id>
    <published>2017-06-13T00:00:00Z</published>
    <updated>2017-06-13T00:00:00Z</updated>
    <author>
      <name>Aravind S.V, Product Manager at GoCD</name>
    </author>
    <content type="html">This post takes a look at where all the elements of a deployment pipeline actually run. In GoCD almost no part of the deployment process runs on the GoCD server. So, this begs the question - what really powers the deployment pipeline?</content>
  </entry>
  <entry>
    <title>We've found our forever home</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/06/01/forever-home.html"/>
    <id>https://preview.gocd.org/2017/06/01/forever-home.html</id>
    <published>2017-06-01T00:00:00Z</published>
    <updated>2017-06-01T00:00:00Z</updated>
    <author>
      <name>GoCD Team</name>
    </author>
    <content type="html">We are happy to have found home at gocd.org! Last year, we moved from go.cd to gocd.io due to an issue with our DNS registrar. This post talks about why we moved again and the impact of this move.</content>
  </entry>
  <entry>
    <title>Part 5 - Control deployments using Manual Gates: Modeling Deployment Pipelines</title>
    <link rel="alternate" href="https://preview.gocd.org/2017/05/23/control-deployments-manual-approvals.html"/>
    <id>https://preview.gocd.org/2017/05/23/control-deployments-manual-approvals.html</id>
    <published>2017-05-23T00:00:00Z</published>
    <updated>2017-05-23T00:00:00Z</updated>
    <author>
      <name>Aravind S.V, Product Manager at GoCD</name>
    </author>
    <content type="html">In this post, we will show you how to use a manual approval process to propagate your build which is especially useful for critical deployments. It not only gives you more control, but also prevents human error in complex pipelines thereby making your deployments safer.</content>
  </entry>
</feed>
