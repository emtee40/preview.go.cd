<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GoCD</title>
  <subtitle>Continuous Delivery</subtitle>
  <id>https://preview.gocd.io/blog</id>
  <link href="https://preview.gocd.io/blog"/>
  <link href="https://preview.gocd.io/feed/rss.xml" rel="self"/>
  <updated>2017-04-12T00:00:00Z</updated>
  <author>
    <name>GoCD Team</name>
  </author>
  <entry>
    <title>Modeling Deployment Pipelines: Part 4 - Build Propagation using Fan-in/Fan-out</title>
    <link rel="alternate" href="https://preview.gocd.io/2017/04/12/build-propagation.html"/>
    <id>https://preview.gocd.io/2017/04/12/build-propagation.html</id>
    <published>2017-04-12T00:00:00Z</published>
    <updated>2017-04-12T00:00:00Z</updated>
    <author>
      <name>Aravind S.V, Product Manager at GoCD</name>
    </author>
    <content type="html">This is the fourth post in the series - Modeling Deployment Pipelines. In this post, weâ€™ll dive into ways to move your build through the deployment pipeline.</content>
  </entry>
  <entry>
    <title>Why GoCD over Jenkins</title>
    <link rel="alternate" href="https://preview.gocd.io/2017/04/11/gocd-over-jenkins.html"/>
    <id>https://preview.gocd.io/2017/04/11/gocd-over-jenkins.html</id>
    <published>2017-04-11T00:00:00Z</published>
    <updated>2017-04-11T00:00:00Z</updated>
    <author>
      <name>David Rice, Managing Director - ThoughtWorks Products</name>
    </author>
    <content type="html">We often get asked by potential GoCD users why pick GoCD over Jenkins. In this post, we share why by comparing philosophy, getting started, continuous delivery, and plugins across the tools.</content>
  </entry>
  <entry>
    <title>Modeling Deployment Pipelines: Part 3 - Reusing Pipelines</title>
    <link rel="alternate" href="https://preview.gocd.io/2017/04/06/reusing-pipelines.html"/>
    <id>https://preview.gocd.io/2017/04/06/reusing-pipelines.html</id>
    <published>2017-04-06T00:00:00Z</published>
    <updated>2017-04-06T00:00:00Z</updated>
    <author>
      <name>Aravind S.V, Product Manager at GoCD</name>
    </author>
    <content type="html">This is the third post in the series - Modeling Deployment Pipelines. In this post, we'll look at some of the ways to reduce the duplication found between pipelines using templates.</content>
  </entry>
  <entry>
    <title>Modeling Deployment Pipelines: Part 2 - The beginnings of a real CD pipeline</title>
    <link rel="alternate" href="https://preview.gocd.io/2017/03/29/beginnings-of-a-real-pipeline.html"/>
    <id>https://preview.gocd.io/2017/03/29/beginnings-of-a-real-pipeline.html</id>
    <published>2017-03-29T00:00:00Z</published>
    <updated>2017-03-29T00:00:00Z</updated>
    <author>
      <name>Aravind S.V, Product Manager at GoCD</name>
    </author>
    <content type="html">This is the second post in the series - Modeling Deployment Pipelines. In this post, we'll look at some of the approaches to begin modeling a deployment pipeline for an application and a few ways they can be optimized. </content>
  </entry>
  <entry>
    <title>Modeling Deployment Pipelines: Part 1 - The Importance and Principles of Continuous Delivery Pipelines</title>
    <link rel="alternate" href="https://preview.gocd.io/2017/03/01/importance-and-principles-of-cd-pipelines.html"/>
    <id>https://preview.gocd.io/2017/03/01/importance-and-principles-of-cd-pipelines.html</id>
    <published>2017-03-01T00:00:00Z</published>
    <updated>2017-03-01T00:00:00Z</updated>
    <author>
      <name>Aravind S.V, Product Manager at GoCD</name>
    </author>
    <content type="html">The path from commit to production involves numerous moving parts, (like multiple code and asset repositories, automatic and manual handoffs, unit tests, integration tests, acceptance tests, performance tests, security tests, etc.) and time that it takes to execute all of these elements. You need a way of modeling your workflow so that people can see, understand and talk about it. This is where CD pipelines come in.</content>
  </entry>
  <entry>
    <title>Migrating from Snap CI to GoCD</title>
    <link rel="alternate" href="https://preview.gocd.io/2017/02/16/migrating-snapci-to-gocd.html"/>
    <id>https://preview.gocd.io/2017/02/16/migrating-snapci-to-gocd.html</id>
    <published>2017-02-16T00:00:00Z</published>
    <updated>2017-02-16T00:00:00Z</updated>
    <author>
      <name>Suzie Prince - Product Manager at Snap CI</name>
    </author>
    <content type="html">Many Snap CI users are now looking for a replacement CI CD tool. In the end of life announcement we recommended that Snap CI users take a look at GoCD and consider it as an alternative.</content>
  </entry>
  <entry>
    <title>Why we've moved from go.cd to gocd.io</title>
    <link rel="alternate" href="https://preview.gocd.io/2017/01/05/why-we-moved-from-go-cd-to-gocd-io.html"/>
    <id>https://preview.gocd.io/2017/01/05/why-we-moved-from-go-cd-to-gocd-io.html</id>
    <published>2017-01-05T00:00:00Z</published>
    <updated>2017-01-05T00:00:00Z</updated>
    <author>
      <name>GoCD team</name>
    </author>
    <content type="html">If you've been following us on twitter, our community forum, or tried to access our website in the past two weeks, you'll know that we've moved from https://go.cd to https://gocd.io. Learn more about it.</content>
  </entry>
  <entry>
    <title>.NET Core and GoCD</title>
    <link rel="alternate" href="https://preview.gocd.io/2016/07/13/DotNet-Core-and-GoCD.html"/>
    <id>https://preview.gocd.io/2016/07/13/DotNet-Core-and-GoCD.html</id>
    <published>2016-07-13T00:00:00Z</published>
    <updated>2016-07-13T00:00:00Z</updated>
    <author>
      <name>Jason Rowe</name>
    </author>
    <content type="html">GoCD is a great way to learn the concepts and abstractions to help model your delivery pipeline and work towards improving it. This post documents setting up a .NET core project in GoCD in a minimal way for demo purposes.</content>
  </entry>
  <entry>
    <title>Don't let sunk costs sink your project</title>
    <link rel="alternate" href="https://preview.gocd.io/2016/06/21/dont-let-sunk-costs-sink-your-project.html"/>
    <id>https://preview.gocd.io/2016/06/21/dont-let-sunk-costs-sink-your-project.html</id>
    <published>2016-06-21T00:00:00Z</published>
    <updated>2016-06-21T00:00:00Z</updated>
    <author>
      <name>Jeff Norris</name>
    </author>
    <content type="html">When we develop software projects, we can get into situations where we are also high-centered, places where it is difficult to make progress either forwards or backwards.</content>
  </entry>
  <entry>
    <title>Add performance testing to your Continuous Delivery pipeline</title>
    <link rel="alternate" href="https://preview.gocd.io/2016/06/08/Add-performance-testing-to-your-Continuous-Delivery-pipeline.html"/>
    <id>https://preview.gocd.io/2016/06/08/Add-performance-testing-to-your-Continuous-Delivery-pipeline.html</id>
    <published>2016-06-08T00:00:00Z</published>
    <updated>2016-06-08T00:00:00Z</updated>
    <author>
      <name>Ken Mugrage</name>
    </author>
    <content type="html">Performance testing as part of a Continuous Delivery (CD) pipeline is rare. The intent of this article is to provide you with some pointers on the types of testing you can do on a regular basis, and to give some strategies for implementation.</content>
  </entry>
</feed>
